# Personal
alias zs='source ~/.zshrc'
alias upgrade_packages='brew update && brew outdated --cask --greedy && brew upgrade && brew upgrade --cask --greedy && brew cleanup && brew cleanup && mise plugins update && mise outdated && mise upgrade && mise prune -y'
alias vi='nvim'
alias v='nvim'
alias zcode='SESSION_NAME=$(basename $(pwd) | tr "[:upper:]" "[:lower:]"); zellij --layout code attach --create ${SESSION_NAME}'
alias ls='eza --icons -lah'
alias l='eza --icons -lah'
alias lt='eza --icons --tree --level=2 --long'
alias cat='bat'
alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias g='git'
alias myip='curl -s -4 https://ifconfig.co'
alias flushdns='sudo dscacheutil -flushcache sudo killall -HUP mDNSResponder'
alias tf='terraform'
alias r='rails'
alias credentials-edit='rails credentials:edit'
alias credentials-edit-dev='rails credentials:edit --environment development'
alias credentials-edit-test='rails credentials:edit --environment test'
alias credentials-edit-prod='rails credentials:edit --environment production'

function tfpl() {
  if [[ "$1" != "" ]]; then
    ENVIRONMENTS=(development dev staging stage stg qa production prod prd)
    if [[ "${ENVIRONMENTS[(r)$1]}" == "$1" ]]; then
      export TF_WORKSPACE="$1"
      export TF_VAR_FILE="-var-file=vars.$1.tfvars"
      export TF_EXTRA_ARGS="${@: (($#-1)),2}"
    else
      export TF_EXTRA_ARGS="${@: (($#-1)),1}"
    fi
  fi
  terraform plan ${TF_VAR_FILE} -lock=false ${TF_EXTRA_ARGS}
  unset TF_WORKSPACE TF_VAR_FILE TF_EXTRA_ARGS
}

function tfap() {
  if [[ "$1" != "" ]]; then
    ENVIRONMENTS=(development dev staging stage stg qa production prod prd)
    if [[ "${ENVIRONMENTS[(r)$1]}" == "$1" ]]; then
      export TF_WORKSPACE="$1"
      export TF_VAR_FILE="-var-file=vars.$1.tfvars"
      export TF_EXTRA_ARGS="${@: (($#-1)),2}"
    else
      export TF_EXTRA_ARGS="${@: (($#-1)),1}"
    fi
  fi
  terraform apply ${TF_VAR_FILE} ${TF_EXTRA_ARGS}
  unset TF_WORKSPACE TF_VAR_FILE TF_EXTRA_ARGS
}

function tfde() {
  if [[ "$1" != "" ]]; then
    ENVIRONMENTS=(development dev staging stage stg qa production prod prd)
    if [[ "${ENVIRONMENTS[(r)$1]}" == "$1" ]]; then
      export TF_WORKSPACE="$1"
      export TF_VAR_FILE="-var-file=vars.$1.tfvars"
      export TF_EXTRA_ARGS="${@: (($#-1)),2}"
    else
      export TF_EXTRA_ARGS="${@: (($#-1)),1}"
    fi
  fi
  terraform destroy ${TF_VAR_FILE} ${TF_EXTRA_ARGS}
  unset TF_WORKSPACE TF_VAR_FILE TF_EXTRA_ARGS
}

# Work
alias gha_watch='test -d .git && last_run_id=""; while true; do latest_run_id=$(gh run list --limit 1 --json databaseId --jq ".[0].databaseId"); if [[ "$latest_run_id" != "$last_run_id" ]]; then last_run_id="$latest_run_id"; gh run watch "$latest_run_id"; else sleep 5; fi; done'
alias halstg='NODE_ENV=staging hal'
alias k='kubectl'
alias k8s='cd ~/dev/work/k8s'

